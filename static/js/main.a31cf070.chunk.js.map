{"version":3,"sources":["components/issue-form.tsx","api/github-events.api.ts","components/error-details.tsx","util.ts","components/comment-item.tsx","components/issue-item.tsx","components/issue-list.tsx","components/no-results.tsx","components/footer.tsx","app.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","slash","fontSize","IssueForm","handleGoFetch","useState","userInput","setUserInput","repoInput","setRepoInput","classes","clearFields","Card","CardContent","Grid","container","alignItems","justify","spacing","item","TextField","label","variant","value","onChange","e","target","placeholder","size","required","aria-required","className","Button","color","onClick","preventDefault","alert","handleSubmit","useGithubIssueComments","user","repo","url","useQuery","axios","get","then","res","data","issuesMap","Map","filter","event","type","forEach","has","payload","issue","id","created_at","login","title","body","comments","set","comment","push","Array","from","values","mapResult","ErrorDetails","error","style","Typography","message","stack","toMomentAgo","dateTimeStr","moment","fromNow","CommentItem","ListItem","width","Box","p","backgroundColor","borderRadius","component","noWrap","allowDangerousHtml","IssueItem","Accordion","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","xs","AccordionDetails","List","map","j","key","IssueList","isLoading","isError","CircularProgress","i","NoResults","margin","Footer","AppBar","position","top","bottom","Toolbar","href","App","setUser","setRepo","marginTop","Container","maxWidth","theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","h4","fontStyle","fontWeight","lineHeight","h3","h2","h1","body1","textAlign","subtitle1","subtitle2","props","MuiButton","MuiLinearProgress","shape","Theme","ThemeProvider","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a31cf070.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Card, CardContent, Grid, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    slash: {\r\n        fontSize: \"2rem\",\r\n    },\r\n});\r\n\r\ninterface IssueFormProps {\r\n    handleGoFetch: (userInput: string, repoInput: string) => void;\r\n}\r\n\r\nconst IssueForm: React.FC<IssueFormProps> = ({ handleGoFetch }) => {\r\n    const [userInput, setUserInput] = useState(\"\");\r\n    const [repoInput, setRepoInput] = useState(\"\");\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (\r\n        e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n    ) => {\r\n        e.preventDefault();\r\n        if (userInput && repoInput) {\r\n            handleGoFetch(userInput, repoInput);\r\n            clearFields();\r\n        } else {\r\n            alert(\"Please enter 'user' and 'repo'...\")\r\n        }\r\n    };\r\n\r\n    const clearFields = () => {\r\n        setUserInput(\"\");\r\n        setRepoInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <form>\r\n                        <Grid\r\n                            container\r\n                            alignItems=\"center\"\r\n                            justify=\"center\"\r\n                            spacing={3}\r\n                        >\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"user\"\r\n                                    variant=\"outlined\"\r\n                                    value={userInput}\r\n                                    onChange={(e) =>\r\n                                        setUserInput(e.target.value)\r\n                                    }\r\n                                    placeholder=\"Enter Github user...\"\r\n                                    size=\"small\"\r\n                                    required\r\n                                    aria-required\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <span className={classes.slash}>/</span>\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    label=\"repo\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder=\"Enter Github repo...\"\r\n                                    value={repoInput}\r\n                                    onChange={(e) =>\r\n                                        setRepoInput(e.target.value)\r\n                                    }\r\n                                    size=\"small\"\r\n                                    required\r\n                                    aria-required\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={(e) => handleSubmit(e)}\r\n                                    size=\"medium\"\r\n                                >\r\n                                    Go Fetch\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IssueForm;\r\n","import { GithubComment, GithubEvent, GithubIssue } from \"./github-events.model\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nexport function useGithubIssueComments(user: string, repo: string) {\n    const url = `https://api.github.com/networks/${user}/${repo}/events?per_page=100`;\n\n    return useQuery<GithubIssue[], Error>(url, () =>\n        axios.get(url).then((res) => mapResult(res.data))\n    );\n}\n\nexport function mapResult(data: GithubEvent[]): GithubIssue[] {\n    const issuesMap = new Map<number, GithubIssue>();\n\n    data.filter((event) => event.type === \"IssueCommentEvent\").forEach(\n        (event) => {\n            if (!issuesMap.has(event.payload.issue.id)) {\n                const issue: GithubIssue = {\n                    id: event.payload.issue.id,\n                    created_at: event.payload.issue.created_at,\n                    user: {\n                        id: event.payload.issue.user.id,\n                        login: event.payload.issue.user.login,\n                    },\n                    title: event.payload.issue.title,\n                    body: event.payload.issue.body,\n                    comments: [],\n                };\n\n                issuesMap.set(event.payload.issue.id, issue);\n            }\n\n            const comment: GithubComment = {\n                id: event.payload.comment.id,\n                created_at: event.payload.comment.created_at,\n                body: event.payload.comment.body,\n                user: {\n                    id: event.payload.comment.user.id,\n                    login: event.payload.comment.user.login,\n                },\n            };\n\n            issuesMap.get(event.payload.issue.id)?.comments.push(comment);\n        }\n    );\n\n    return Array.from(issuesMap.values());\n}\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\ntype ErrorDisplayProps = {\n    error?: Error | null;\n};\n\nconst ErrorDetails: React.FC<ErrorDisplayProps> = ({ error }) => (\n    <div style={{ color: \"red\" }}>\n        <Typography variant=\"h1\">Oops, an error occurred</Typography>\n        <Typography variant=\"h2\">{error?.message}</Typography>\n        <hr />\n        <pre>{error?.stack}</pre>\n    </div>\n);\n\nexport default ErrorDetails;\n","import moment from \"moment\";\r\n\r\nexport function toMomentAgo(dateTimeStr: string) {\r\n    return moment(dateTimeStr).fromNow();\r\n}\r\n","import { ListItem, Typography, Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport { GithubComment } from \"../api/github-events.model\";\r\nimport { toMomentAgo } from \"../util\";\r\n\r\ninterface CommentItemProps {\r\n    comment: GithubComment;\r\n}\r\n\r\nconst CommentItem: React.FC<CommentItemProps> = ({ comment }) => {\r\n    return (\r\n        <>\r\n            <ListItem alignItems=\"center\" style={{ width: \"80%\" }}>\r\n                <Box\r\n                    p={2}\r\n                    style={{\r\n                        backgroundColor: \"#ecf1f0\",\r\n                        borderRadius: \"4px\",\r\n                        width: \"100%\",\r\n                    }}\r\n                >\r\n                    <div>\r\n                        <Typography component={\"span\"}>\r\n                            <div>\r\n                                By <strong>{comment.user.login}</strong> |{\" \"}\r\n                                {toMomentAgo(comment.created_at)}\r\n                            </div>\r\n                        </Typography>\r\n\r\n                        <Typography component={\"span\"} noWrap={false}>\r\n                            <ReactMarkdown allowDangerousHtml>\r\n                                {comment.body}\r\n                            </ReactMarkdown>\r\n                        </Typography>\r\n                    </div>\r\n                </Box>\r\n            </ListItem>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentItem;\r\n","import React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport { GithubIssue } from \"../api/github-events.model\";\r\nimport CommentItem from \"./comment-item\";\r\nimport { toMomentAgo } from \"../util\";\r\n\r\ninterface IssueItemProps {\r\n    issue: GithubIssue;\r\n}\r\n\r\nconst IssueItem: React.FC<IssueItemProps> = ({ issue }) => {\r\n    return (\r\n        <>\r\n            <Accordion TransitionProps={{ unmountOnExit: true }}>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    style={{ backgroundColor: \"#e0f2f1\" }}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                component={\"span\"}\r\n                                variant=\"h2\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                <ReactMarkdown allowDangerousHtml>\r\n                                    {issue.title}\r\n                                </ReactMarkdown>\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Typography component={\"span\"}>\r\n                                By <strong>{issue.user.login}</strong> |{\" \"}\r\n                                {toMomentAgo(issue.created_at)}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </AccordionSummary>\r\n\r\n                <AccordionDetails>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                component={\"span\"}\r\n                                className=\"issue-body\"\r\n                                noWrap={false}\r\n                            >\r\n                                <ReactMarkdown allowDangerousHtml>\r\n                                    {issue.body}\r\n                                </ReactMarkdown>\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h3\">Comments</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <List>\r\n                                {issue.comments.map((comment, j) => (\r\n                                    <CommentItem comment={comment} key={j} />\r\n                                ))}\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <br />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IssueItem;\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    CircularProgress,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nimport { useGithubIssueComments } from \"../api/github-events.api\";\r\nimport ErrorDetails from \"./error-details\";\r\nimport IssueItem from \"./issue-item\";\r\n\r\ninterface IssueListProps {\r\n    user: string;\r\n    repo: string;\r\n}\r\n\r\nconst IssueList: React.FC<IssueListProps> = ({ user, repo }) => {\r\n    const { data, isLoading, isError, error } = useGithubIssueComments(\r\n        user,\r\n        repo\r\n    );\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"text-center mt\">\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (isError) {\r\n        return <ErrorDetails error={error} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <br />\r\n            <Card>\r\n                <CardContent>\r\n                    <div className=\"text-center mb\">\r\n                        <Typography variant=\"h1\">Issues</Typography>\r\n                    </div>\r\n                    <div>\r\n                        {data?.map((issue, i) => (\r\n                            <IssueItem issue={issue} key={i} />\r\n                        ))}\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IssueList;\r\n","import { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst NoResults: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Box margin=\"1rem\">\r\n                <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                        <div className=\"text-center mb\">\r\n                            <Typography variant=\"h2\" color=\"secondary\">\r\n                                No Issues found...\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <Typography>\r\n                                Enter <strong>user</strong> and{\" \"}\r\n                                <strong>repo</strong>; then{\" \"}\r\n                                <strong>GO FETCH</strong>!\r\n                            </Typography>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NoResults;\r\n","import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                style={{\r\n                    top: \"auto\",\r\n                    bottom: 0,\r\n                }}\r\n            >\r\n                <Toolbar variant=\"dense\">\r\n                    <div style={{ margin: \"auto\" }}>\r\n                        <Typography color=\"inherit\">\r\n                            Made with {\"❤\"} by{\" \"}\r\n                            <a\r\n                                style={{ color: \"#fff\" }}\r\n                                href=\"http://github.com/AluBhorta\"\r\n                            >\r\n                                AluBhorta\r\n                            </a>\r\n                            .\r\n                        </Typography>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\nimport { AppBar, Box, Container, Typography } from \"@material-ui/core\";\n\nimport IssueForm from \"./components/issue-form\";\nimport IssueList from \"./components/issue-list\";\nimport NoResults from \"./components/no-results\";\nimport Footer from \"./components/footer\";\n\nfunction App() {\n    const [user, setUser] = useState(\"\");\n    const [repo, setRepo] = useState(\"\");\n\n    const handleGoFetch = (userInput: string, repoInput: string) => {\n        setUser(userInput);\n        setRepo(repoInput);\n    };\n\n    return (\n        <>\n            <Box marginTop=\"5vh\">\n                <Container maxWidth=\"md\">\n                    <div className=\"text-center mb\">\n                        <Typography variant=\"h1\" color=\"secondary\">\n                            Search Github Issues {\" 🔍\"}\n                        </Typography>\n                    </div>\n\n                    <IssueForm handleGoFetch={handleGoFetch} />\n\n                    {user && repo ? (\n                        <IssueList user={user} repo={repo} />\n                    ) : (\n                        <NoResults />\n                    )}\n                </Container>\n\n                <Footer />\n            </Box>\n        </>\n    );\n}\n\nexport default App;\n","import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#008891\",\r\n        },\r\n        secondary: {\r\n            main: \"#0f3057\",\r\n        },\r\n    },\r\n    typography: {\r\n        fontSize: 16,\r\n        fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif`,\r\n        h4: {\r\n            fontStyle: \"normal\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"14px\",\r\n            lineHeight: \"17px\",\r\n        },\r\n        h3: {\r\n            fontStyle: \"normal\",\r\n            fontWeight: 300,\r\n            fontSize: \"20px\",\r\n            lineHeight: \"24px\",\r\n        },\r\n        h2: {\r\n            fontStyle: \"normal\",\r\n            fontWeight: 300,\r\n            fontSize: \"30px\",\r\n            lineHeight: \"36px\",\r\n        },\r\n        h1: {\r\n            fontStyle: \"normal\",\r\n            fontWeight: 300,\r\n            fontSize: \"40px\",\r\n            lineHeight: \"48px\",\r\n        },\r\n        body1: {\r\n            fontStyle: \"normal\",\r\n            fontWeight: \"normal\",\r\n            fontSize: \"14px\",\r\n            lineHeight: \"17px\",\r\n            textAlign: \"left\",\r\n        },\r\n        subtitle1: {\r\n            fontStyle: \"medium\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"12px\",\r\n            lineHeight: \"12px\",\r\n            textAlign: \"left\",\r\n        },\r\n        subtitle2: {\r\n            fontStyle: \"normal\",\r\n            fontWeight: \"normal\",\r\n            fontSize: \"12px\",\r\n            lineHeight: \"12px\",\r\n            textAlign: \"left\",\r\n        },\r\n    },\r\n    props: {\r\n        MuiButton: {\r\n            color: \"primary\",\r\n        },\r\n        MuiLinearProgress: {\r\n            color: \"secondary\",\r\n        },\r\n    },\r\n    shape: {},\r\n});\r\n\r\nexport default function Theme(props: { children?: React.ReactNode }) {\r\n    return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport Theme from \"./theme\";\n\nimport \"./styles/index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Theme>\n            <App />\n        </Theme>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}